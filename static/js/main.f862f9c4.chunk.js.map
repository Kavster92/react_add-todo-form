{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","userId","getUser","usersFromServer","find","todosFromServer","App","useState","todosTitle","setTodoTitle","todosUserId","setTodosUserId","titleIsVerified","setIsTitleVerified","userIsVerified","setIsUserVerified","maxIdInitial","Math","max","maxId","setMaxId","action","method","onSubmit","event","preventDefault","length","push","handlerSubmit","htmlFor","type","placeholder","value","onChange","inputValue","target","test","handlerTitleInput","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f862f9c4.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../Types/User';\n\ntype Props = {\n  user: User\n};\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './components/Types/User';\nimport { Todo } from './components/Types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todosTitle, setTodoTitle] = useState('');\n  const [todosUserId, setTodosUserId] = useState(-1);\n  const [titleIsVerified, setIsTitleVerified] = useState(true);\n  const [userIsVerified, setIsUserVerified] = useState(true);\n  const maxIdInitial = Math.max(...todosFromServer.map(todo => todo.id));\n  const [maxId, setMaxId] = useState(maxIdInitial + 1);\n\n  const handlerSubmit = () => {\n    if (todosTitle.length && todosUserId > -1) {\n      setMaxId(maxId + 1);\n\n      const todo: Todo = {\n        id: maxId,\n        userId: todosUserId,\n        title: todosTitle,\n        completed: false,\n        user: getUser(todosUserId),\n      };\n\n      todos.push(todo);\n\n      setTodoTitle('');\n      setTodosUserId(-1);\n    } else {\n      if (!todosTitle.length) {\n        setIsTitleVerified(false);\n      }\n\n      if (todosUserId === -1) {\n        setIsUserVerified(false);\n      }\n    }\n  };\n\n  const handlerTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value;\n    const regEx = /^[a-zA-Z0-9 ]*$/;\n\n    if (regEx.test(inputValue)) {\n      setTodoTitle(event.target.value);\n      setIsTitleVerified(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add To-Do Form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          handlerSubmit();\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a Title\"\n            value={todosTitle}\n            onChange={event => {\n              handlerTitleInput(event);\n            }}\n          />\n          {!titleIsVerified\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={todosUserId}\n            onChange={event => {\n              setTodosUserId(+event.target.value);\n              setIsUserVerified(true);\n            }}\n          >\n            <option value={-1} disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {!userIsVerified\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}